name: Reusable Build and Push Workflow

# List of required fields for github workflow
on:
  workflow_call:
    inputs:
      container_name:
        required: true
        type: string
      container_file:
        required: false
        type: string
        default: Containerfile
      container_tag:
        required: false
        type: string
        default: latest
      build_target:
        required: false
        type: string
        default: base
    secrets:
      CONTAINER_TOKEN:
        required: true

env:
  REGISTRY_URL: ghcr.io/${{ github.repository_owner }}
  DEFAULT_BRANCH: main

jobs:
  # build amd64
  build_amd64:
    uses: amidg/workflows/.github/workflows/build_docker_and_push.yml@main
    with:
      container_name: ${{ inputs.container_name }}
      container_file: ${{ inputs.container_file }}
      container_tag:  ${{ github.sha }}-amd64
      runner: ubuntu-24.04
    secrets:
      CONTAINER_TOKEN: ${{ secrets.CONTAINER_TOKEN }}

  # build arm64
  build_arm64:
    uses: amidg/workflows/.github/workflows/build_docker_and_push.yml@main
    with:
      container_name: ${{ inputs.container_name }}
      container_file: ${{ inputs.container_file }}
      container_tag:  ${{ github.sha }}-arm64
      runner: ubuntu-24.04-arm
    secrets:
      CONTAINER_TOKEN: ${{ secrets.CONTAINER_TOKEN }}

  # build manifest to allow to push multiarch image
  create_manifest:
    needs:
      - build_amd64
      - build_arm64
    runs-on: ubuntu-24.04
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.CONTAINER_TOKEN }}
          registry: ${{ env.REGISTRY_URL }}

      - name: Create and push manifest list
        run: |
          # ensure experimental CLI is onâ€”or use buildx CLI
          docker manifest create \
            ${REGISTRY_URL}/${{ inputs.container_name }}:${{ inputs.container_tag }} \
            ${REGISTRY_URL}/${{ inputs.container_name }}:${{ inputs.container_tag }}-amd64 \
            ${REGISTRY_URL}/${{ inputs.container_name }}:${{ inputs.container_tag }}-arm64

          docker manifest push \
            ${REGISTRY_URL}/${{ inputs.container_name }}:${{ inputs.container_tag }}
